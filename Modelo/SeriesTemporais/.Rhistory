jotest=ca.jo(df[,c('gZ', 'Infla')], type="trace", K=5, ecdet="trend", spec="longrun")
summary(jotest)
PO <- ca.po(df[,c("gZ", "Infla")], demean = "trend", lag = "long", type="Pu")
summary(PO)
aTSA::coint.test(y = df[,"gZ"], X = df[,"Infla"], d = 0, output = TRUE)
model <- tsDyn::VECM(data = df[,c("Infla", "gZ")], lag = 4, r = 1, estim = "ML", exogen=df[,"Juros"])
df[,"Juros"]
model <- tsDyn::VECM(data = df[,c("Infla", "gZ")], lag = 4, r = 1, estim = "ML", exogen=coredata(df[,"Juros"]) )
model <- tsDyn::VECM(data = df[,c("Infla", "gZ")], lag = 4, r = 1, estim = "ML", exogen=coredata(df[,"Juros"]) )
Dados_yeojohnson <- read.csv("/dados/Dissertacao/Modelo/SeriesTemporais/Dados_yeojohnson.csv")
View(Dados_yeojohnson)
knitr::opts_chunk$set(echo = TRUE)
library(zoo)
library(xts)
library(tsDyn)
library(urca)
library(vars)
df <- read.csv(
"/dados/Dissertacao/Modelo/SeriesTemporais/Dados_yeojohnson.csv",
encoding="UTF-8",
stringsAsFactors=FALSE
)
df <- ts(data = df, start = c(1992,03), frequency = 4)
df <- as.xts(df)
df <- zoo::na.locf0(df)
vars::VARselect(df[,c('gZ', 'Taxa.Própria')], type = "const")
jotest=ca.jo(df[,c('gZ', 'Taxa.Própria')], type="eigen", K=6, ecdet="none", spec="longrun")
summary(jotest)
tsDyn::lags.select(
data = df[,c("Inflação", "gZ")],
include = "both"
)
tsDyn::lags.select(
data = df[,c("Inflação", "gZ")],
include = "both",
lag.max = 12
)
View(df)
vars::VARselect(
y = df[,c("Inflação", "gZ")],
type = "both",
exogen = df[,c("Taxa.de.juros")],
lag.max = 12
)
vars::VARselect(
y = df[,c("Inflação", "gZ")],
type = "both",
exogen = df[,c("Taxa.de.juros")],
lag.max = 12
)$criteria
vars::VARselect(
y = df[,c("Inflação", "gZ")],
type = "both",
exogen = df[,c("Taxa.de.juros")],
lag.max = 12
)$selection
urca::ca.jo(
x = df[,c("Inflação", "gZ")],
type = "trace",
ecdet = "both",
K = 4
)
urca::ca.jo(
x = df[,c("Inflação", "gZ")],
type = "trace",
ecdet = "trend",
spec = "longrun",
K = 4
)
library(dplyr)
urca::ca.jo(
x = df[,c("Inflação", "gZ")],
type = "trace",
ecdet = "trend",
spec = "longrun",
K = 4
) %>% summary()
tsDyn::rank.select(
data = df[,c("Inflação", "Taxa.de.juros")],
lag.max = 12,
include = "both"
) %>% summary()
tsDyn::rank.select(
data = df[,c("Inflação", "Taxa.de.juros")],
lag.max = 12,
include = "both",
fitMeasure = "LL"
) %>% summary()
tsDyn::rank.select(
data = df[,c("Inflação", "gZ")],
lag.max = 12,
include = "both",
fitMeasure = "LL"
) %>% summary()
tsDyn::rank.select(
data = df[,c("Inflação", "gZ")],
lag.max = 12,
include = "both",
) %>% summary()
tsDyn::rank.select(
data = df[,c("Inflação", "gZ")],
lag.max = 12,
include = "trend"
) %>% summary()
tsDyn::rank.select(
data = df[,c("Inflação", "gZ")],
lag.max = 12,
include = "const"
) %>% summary()
tsDyn::rank.select(
data = df[,c("Inflação", "gZ")],
lag.max = 12,
include = "both"
) %>% summary()
aTSA::coint.test(
y = df[,c("gZ")],
X = df[,c("Inflação")],
nlag = 4
)
aTSA::coint.test(
y = df[,c("gZ")] %>%  coredata(),
X = df[,c("Inflação")] %>%  coredata(),
nlag = 4
)
install.packages('stargazer')
library(stargazer)
urca::ca.jo(
x = df[,c("Inflação", "gZ")],
type = "trace",
ecdet = "trend",
spec = "longrun",
K = 4
) %>% summary() %>% stargazer::stargazer()
urca::ca.jo(
x = df[,c("Inflação", "gZ")],
type = "trace",
ecdet = "trend",
spec = "longrun",
K = 4
) %>% summary() %>% kable()
urca::ca.jo(
x = df[,c("Inflação", "gZ")],
type = "trace",
ecdet = "trend",
spec = "longrun",
K = 4
) %>% summary()
install.packages('egm')
install.packages('egcm')
egcm::egcm(
X = df$Inflação
)
egcm::egcm(
X = df[, c("Inflação")] %>% coredata()
)
egcm::egcm(
X = df[, c("Inflação")],
Y = df[,c("gZ")],
log = FALSE
)
egcm::egcm(
X = df[, c("Inflação")],
Y = df[,c("gZ")],
log = FALSE
) %>% summary()
egcm::egcm(
X = df[, c("Inflação")],
Y = df[,c("gZ")],
log = FALSE
) %>% egcm::is.cointegrated()
knitr::opts_chunk$set(echo = TRUE, message = FALSE)
tsDyn::VECM(
data=df[,c("Inflação", "gZ")],
include = "trend",
LRinclude = "both",
lag = 4,
r = 1,
exogen = df[,c("Taxa.de.juros")],
estim = "ML"
) %>% summary()
tsDyn::VECM(
data=df[,c("Inflação", "gZ")],
include = "trend",
LRinclude = "both",
lag = 4,
r = 1,
exogen = df[,c("Taxa.de.juros")] %>% coredata(),
estim = "ML"
) %>% summary()
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
irf(x = model)
serial.test(modelo,lags.pt=8, type='PT.asymptotic')
serial.test(model,lags.pt=8, type='PT.asymptotic')
serial.test(model,lags.pt=9, type='PT.adjusted')
tsDyn::VECM(
data=df[,c("Inflação", "gZ")],
include = "trend",
LRinclude = "both",
lag = 4,
r = 1,
exogen = df[,c("Taxa.de.juros")] %>% coredata(),
estim = "ML"
) -> model
model %>% summary()
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(zoo)
library(xts)
library(tsDyn)
library(urca)
library(vars)
library(dplyr)
library(stargazer)
library(lmtest)
df <- read.csv(
"/dados/Dissertacao/Modelo/SeriesTemporais/Dados_yeojohnson.csv",
encoding="UTF-8",
stringsAsFactors=FALSE
)
df <- ts(data = df, start = c(1992,03), frequency = 4)
df <- as.xts(df)
df <- zoo::na.locf0(df)
vars::VARselect(
y = df[,c("Inflação", "gZ")],
type = "both",
exogen = df[,c("Taxa.de.juros")],
lag.max = 12
)$selection
urca::ca.jo(
x = df[,c("Inflação", "gZ")],
type = "trace",
ecdet = "trend",
spec = "longrun",
K = 4
) %>% summary()
tsDyn::rank.select(
data = df[,c("Inflação", "gZ")],
lag.max = 12,
include = "both"
) %>% summary()
egcm::egcm(
X = df[, c("Inflação")],
Y = df[,c("gZ")],
log = FALSE
) %>% egcm::is.cointegrated()
tsDyn::VECM(
data=df[,c("Inflação", "gZ")],
include = "trend",
LRinclude = "both",
lag = 4,
r = 1,
exogen = df[,c("Taxa.de.juros")] %>% coredata(),
estim = "ML"
) -> model
model %>% summary()
vars::serial.test(model,lags.pt=8, type='PT.asymptotic')
vars::serial.test(
model %>% vars::vec2var(),
lags.pt=8,
type='PT.asymptotic'
)
vars::serial.test(
model %>% urca::cajorls(),
lags.pt=8,
type='PT.asymptotic'
)
model.coint %>% summary()
urca::ca.jo(
x = df[,c("Inflação", "gZ")],
type = "trace",
ecdet = "trend",
spec = "longrun",
K = 4
) -> model.coint
model.coint %>% summary()
vars::serial.test(
model.coint %>% urca::cajorls(),
lags.pt=8,
type='PT.asymptotic'
)
vars::serial.test(
model.coint,
lags.pt=8,
type='PT.asymptotic'
)
vars::serial.test(
model.coint %>%  vec2var(),
lags.pt=8,
type='PT.asymptotic'
)
vars::serial.test(
model.coint %>%  vars::vec2var(),
lags.pt=8,
type='PT.adjusted'
)
vars::serial.test(
model.coint %>%  vars::vec2var(),
lags.pt=8,
type='BG'
)
normality.test(
model.coint,
multivariate.only=FALSE
)
normality.test(
model.coint %>%  vars::vec2var(),
multivariate.only=FALSE
)
tsDyn::irf(
model,
ortho=FALSE
)
tsDyn::irf(
model,
)
tsDyn::irf(
model.coint %>%  vars::vec2var(),
ortho=FALSE
)
tsDyn::irf(
model.coint %>%  vars::vec2var(),
ortho=FALSE
) %>% plot()
tsDyn::irf(
model.coint %>%  vars::vec2var(),
ortho=FALSE,
reponse="gZ"
) %>% plot()
tsDyn::irf(
model.coint %>%  vars::vec2var(),
ortho=FALSE,
reponse="gZ",
impulse="Inflação"
) %>% plot()
tsDyn::irf(
model.coint %>%  vars::vec2var(),
ortho=FALSE,
impulse="Inflação"
) %>% plot()
tsDyn::irf(
model.coint %>%  vars::vec2var(),
ortho=FALSE,
impulse="gZ"
) %>% plot()
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(zoo)
library(xts)
library(tsDyn)
library(tsDyn)
library(urca)
library(vars)
library(dplyr)
library(stargazer)
library(lmtest)
df <- read.csv(
"/dados/Dissertacao/Modelo/SeriesTemporais/Dados_yeojohnson.csv",
encoding="UTF-8",
stringsAsFactors=FALSE
)
df <- ts(data = df, start = c(1992,03), frequency = 4)
df <- as.xts(df)
df <- zoo::na.locf0(df)
strucchange::sctest(df$gZ ~ 1)
strucchange::sctest(df$gZ ~ 1, breaks = 2)
strucchange::sctest(df$gZ ~ 1) %>% summary()
df["1991"]
df["1991/"]
df["1991"] %>% index()
df["1991"]
df["1991-01"]
df["1991-04"]
df["1991-01/1991-04"]
df["1991-01/1991-02"]
df["1991-01/"]
df["1991-Q1"]
index(df)
df["1993"]
df["1993-1"]
df["1993-1"]/length(df %>% coredata())
length(df["1993-1/"] coredata())/length(df %>% coredata())
length(df["1993-1/"] %>%  coredata())/length(df %>% coredata())
length(df["/1993-1"] %>%  coredata())
strucchange::breakpoints(df$gZ ~1) %>% summary()
result = strucchange::breakpoints(df$gZ ~1) %>% summary()
result$breakpoints
result$breakpoints[0]
result$breakpoints
result = strucchange::breakpoints(df$gZ ~1) %>% summary()
result = strucchange::breakpoints(df$gZ ~1) %>% summary()
strucchange::breakpoints(df$gZ ~1) %>% summary()
strucchange::sctest(
df$gZ ~ 1,
type = "Chow",
point = 18
)
strucchange::sctest(
df$gZ ~ 1,
type = "Chow",
point = 1
)
strucchange::sctest(
df$gZ ~ 1,
type = "Chow",
point = 18
)
strucchange::sctest(
df$gZ ~ 1,
type = "Chow",
point = 17
)
strucchange::sctest(
df$gZ ~ 1,
type = "Chow"
)
strucchange::sctest(df$gZ ~ 1,
type = "Chow",
point = 17)
strucchange::sctest(df$gZ ~ 1,
type = "Chow",
#point = 17
)
df <- read.csv(
"/dados/Dissertacao/Modelo/SeriesTemporais/Dados_yeojohnson.csv",
encoding="UTF-8",
stringsAsFactors=FALSE
)
df <- ts(data = df, start = c(1992,03), frequency = 4)
df <- as.xts(df)
df <- zoo::na.locf0(df)
strucchange::breakpoints(df$gZ ~1) %>% summary()
strucchange::sctest(df$gZ ~ 1,
type = "Chow",
#point = 17
)
strucchange::sctest(df$gZ ~ 1,
type = "Chow"
#point = 17
)
strucchange::sctest(df$gZ ~ 1
)
strucchange::sctest(df$gZ ~ 1)
strucchange::Fstats(df$gZ)
strucchange::Fstats(df$gZ~1)
strucchange::Fstats(df$gZ~1)
strucchange::Fstats(df$gZ)
df <- read.csv(
"/dados/Dissertacao/Modelo/SeriesTemporais/Dados_yeojohnson.csv",
encoding="UTF-8",
stringsAsFactors=FALSE
)
df <- ts(data = df, start = c(1992,03), frequency = 4)
#df <- as.xts(df)
df <- zoo::na.locf0(df)
strucchange::breakpoints(df$gZ ~1) %>% summary()
strucchange::breakpoints(gZ ~1, data=df) %>% summary()
strucchange::sctest(gZ~1, data=df, point=18)
strucchange::sctest(gZ~1, data=df, point=18) %>% print()
strucchange::sctest(gZ~1, data=df, point=i) %>% print()
breaks <- c(18, 40, 57, 75, 94)
for{i in breaks}{
for(i in breaks){
strucchange::sctest(gZ~1, data=df, point=i) %>% print()
}
strucchange::sctest(gZ~1, data=df, point=i, type="Chow") %>% print()
breaks <- c(18, 40, 57, 75, 94)
for(i in breaks){
strucchange::sctest(gZ~1, data=df, point=i, type="Chow") %>% print()
}
df[18,]
df[18,] %>% index
df[18,] %>% index()
df[18,"gZ"] %>% index()
df[18,"gZ"]
df %>% index()
index(df)[18]
print(paste0("Testando para ", index(df)[i]))
strucchange::sctest(gZ~1, data=df, point=i, type="Chow") %>% print()
for(i in breaks){
print(paste0("Testando para ", index(df)[i]))
strucchange::sctest(gZ~1, data=df, point=i, type="Chow") %>% print()
}
for(i in breaks){
print(paste0("Testando para i = ", index(df)[i]))
strucchange::sctest(gZ~1, data=df, point=i, type="Chow") %>% print()
}
breakpoints(gZ~1, data=df)
result$breakpoints
result$breakpoints[1]
result$breakpoints[1,1]
c(result$breakpoints)
c(result$breakpoints) %>% unique()
c(result$breakpoints) %>% unique() %>% dropna()
c(result$breakpoints) %>% unique()
c(result$breakpoints) %>% unique() %>% zoo::na.locf0()
c(result$breakpoints) %>% unique() %>% na.locf0()
c(result$breakpoints) %>% unique() %>% na.omit()
c(result$breakpoints) %>% unique() %>% na.omit()$1
c(result$breakpoints) %>% unique() %>% na.omit()[1]
c(result$breakpoints) %>% unique() %>% na.omit()
result$breakpoints %>% unique() %>% na.omit()
result$breakpoints %>% unique() %>% na.omit() %>% c()
result$breakpoints %>% unique() %>% na.omit() %>% c() -> breaks
for(i in breaks){
print(paste0("Testando para i = ", index(df)[i]))
strucchange::sctest(gZ~1, data=df, point=i, type="Chow") %>% print()
}
result = breakpoints(Taxa.Própria~1, data=df)
result$breakpoints %>% unique() %>% na.omit() %>% c() -> breaks
for(i in breaks){
print(paste0("Testando para i = ", index(df)[i]))
strucchange::sctest(gZ~1, data=df, point=i, type="Chow") %>% print()
}
View(df)
